import os
import base64
import asyncio
from pyrogram import Client

# –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
def check_env_vars():
    required_vars = {
        'API_ID': os.getenv("API_ID"),
        'API_HASH': os.getenv("API_HASH"),
        'TG_SESSION_BASE64': os.getenv("TG_SESSION_BASE64"),
        'CHAT_ID': os.getenv("CHAT_ID")
    }
    
    missing_vars = [name for name, value in required_vars.items() if not value]
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ Secrets GitHub!")
        exit(1)
    
    try:
        return {
            'api_id': int(required_vars['API_ID']),
            'api_hash': required_vars['API_HASH'],
            'session_b64': required_vars['TG_SESSION_BASE64'],
            'chat_id': int(required_vars['CHAT_ID'])
        }
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {e}")
        exit(1)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞
async def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    config = check_env_vars()
    print("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é
    try:
        with open("my_account.session", "wb") as f:
            f.write(base64.b64decode(config['session_b64']))
        print("‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏: {e}")
        exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    app = Client(
        "my_account",
        api_id=config['api_id'],
        api_hash=config['api_hash'],
        workdir=".",
        in_memory=True
    )
    
    async with app:
        delay = 0
        while True:
            try:
                await app.send_message(
                    config['chat_id'],
                    f"‚è∞ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ {4*60 + delay} –º–∏–Ω—É—Ç"
                )
                print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–∑–∞–¥–µ—Ä–∂–∫–∞ +{delay} –º–∏–Ω—É—Ç)")
                
                await asyncio.sleep(4 * 3600 + delay * 60)
                delay = (delay + 1) % 60
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 60 —Å–µ–∫...")
                await asyncio.sleep(60)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞")
    asyncio.run(main())
